@using Psychology_Centre.ViewModels
@model IndexViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Клиенты";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <p>
        <a class="btn btn-dark" asp-action="Create">Добавить нового клиента</a>
    </p>
    <h3>Фильтр</h3>
    <form asp-controller="Clients" asp-action="Index">
        <p>
            Фамилия: <input type="text" name="searchSurname" value="@Model.FilterViewModel.SelectedSurname" />
            Email: <input type="text" name="searchEmail" value="@Model.FilterViewModel.SelectedEmail" />
            <input type="submit" value="Фильтр" />
        </p>
    </form>
    <table class="table table-bordered">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Id</th>
                <th scope="col">
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortViewModel.SurnameSort)"
                       asp-route-name="@(Model.FilterViewModel.SelectedSurname)">ФИО</a>
                </th>
                <th scope="col">Контактный телефон</th>
                <th scope="col">
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortViewModel.EmailSort)"
                       asp-route-name="@(Model.FilterViewModel.SelectedEmail)">Email</a>
                </th>
                <th scope="col">Когда позвонить</th>
                <th scope="col">Статус</th>
                <th scope="col">Особый клиент</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Client item in Model.Clients)
            {
                <tr>
                    <td scope="row">
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td scope="row">
                        @Html.DisplayFor(modelItem => item.Surname) @Html.DisplayFor(modelItem => item.Name) @Html.DisplayFor(modelItem => item.Midname)
                    </td>
                    <td scope="row">
                        @Html.DisplayFor(modelItem => item.PhoneNumberFirst)
                    </td>
                    <td scope="row">
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td scope="row">
                        @Html.DisplayFor(modelItem => item.ComfyCallTime)
                    </td>
                    <td scope="row">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td scope="row">
                        @Html.DisplayFor(modelItem => item.IsSpecial)
                    </td>
                    <td scope="row">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Полная карточка</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
           asp-route-email="@(Model.FilterViewModel.SelectedEmail)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           class="btn  btn-outline-dark">
            <i class="glyphicon glyphicon-chevron-left"></i>
            Назад
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)   
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
           asp-route-email="@(Model.FilterViewModel.SelectedEmail)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           class="btn btn-outline-dark">
            Вперед
            <i class="glyphicon glyphicon-chevron-right"></i>
        </a>
    }
</body>
</html>
